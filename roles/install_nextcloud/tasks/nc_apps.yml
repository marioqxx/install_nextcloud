---
- name: nc_apps | Parse the item values
  ansible.builtin.set_fact:
    nc_app_name: "{{ item.key }}"
    nc_app_source: "{{ item.value.source if item.value.source is defined else item.value }}"
    nc_app_cfg: "{{ item.value }}"

- name: "nc_apps | Install from the official app-store app: \"{{ nc_app_name }}\""
  become_user: "{{ nextcloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: true
  nextcloud.admin.app:
    name: "{{ nc_app_name }}"
    state: present
    nextcloud_path: "{{ nextcloud_webroot }}"
  when:
    - (nc_app_source is string) and (nc_app_source | length == 0)
    - nc_app_name not in nc_available_apps.disabled

- name: "nc_apps | Download or copy Archive to apps folder from \"{{ nc_app_source }}\""
  become_user: "{{ nextcloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: true
  ansible.builtin.unarchive:
    copy: "{{ nc_app_source is not url }}"
    src: "{{ nc_app_source }}"
    dest: "{{ nextcloud_webroot }}/apps/"
    owner: "{{ nextcloud_websrv_user }}"
    group: "{{ nextcloud_websrv_group }}"
    creates: "{{ nextcloud_webroot }}/apps/{{ nc_app_name }}"
  when:
    - (nc_app_source is string) and (nc_app_source | length > 0)
    - nc_app_name not in nc_available_apps.disabled

- name: "nc_apps | Enable the application \"{{ nc_app_name }}\""
  become_user: "{{ nextcloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: true
  nextcloud.admin.app:
    name: "{{ nc_app_name }}"
    state: present
    nextcloud_path: "{{ nextcloud_webroot }}"
  changed_when: true

- name: "nc_apps | Configure the application \"{{ nc_app_name }}\""
  become_user: "{{ nextcloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: true
  nextcloud.admin.run_occ:
    command: config:app:set {{ nc_app_name }} {{ item_cfg.key }} --value="{{ item_cfg.value }}"
    nextcloud_path: "{{ nextcloud_webroot }}"
  with_dict: "{{ nc_app_cfg.conf | default({}) }}"
  loop_control:
    loop_var: item_cfg
  when: nc_app_cfg.conf is defined
